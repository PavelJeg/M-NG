import tkinter as tk
from tkinter import ttk
from tkinter import colorchooser
import random

window = tk.Tk()
window.title("Kivi, paber, käärid")

player_score = tk.StringVar()
player_score.set("0")

def play_game(user_choice):
    global player_score  
    possible_actions = ["kivi", "paber", "käärid"]
    computer_choice = random.choice(possible_actions)
    result_text.set(f"{translations['you_selected']} {translations[user_choice]}, {translations['computer_selected']} {translations[computer_choice]}.\n")

    if user_choice == computer_choice:
        result_text.set(result_text.get() + translations["tie"])
    elif user_choice == "kivi":
        if computer_choice == "käärid":
            result_text.set(result_text.get() + translations["rock_wins"])
            player_score.set(str(int(player_score.get()) + 1))  # увеличиваем баллы игрока на 1
        else:
            result_text.set(result_text.get() + translations["paper_wins"])
    elif user_choice == "paber":
        if computer_choice == "kivi":
            result_text.set(result_text.get() + translations["paper_wins"])
            player_score.set(str(int(player_score.get()) + 1))  # увеличиваем баллы игрока на 1
        else:
            result_text.set(result_text.get() + translations["scissors_wins"])
    elif user_choice == "käärid":
        if computer_choice == "paber":
            result_text.set(result_text.get() + translations["scissors_wins"])
            player_score.set(str(int(player_score.get()) + 1))  # увеличиваем баллы игрока на 1
        else:
            result_text.set(result_text.get() + translations["rock_wins"])

    score_label.config(text=f"{translations['score']}: {player_score.get()}")

    if int(player_score.get()) >= 10:
        result_text.set(translations["you_won"])
        rock_button.config(state=tk.DISABLED)
        paper_button.config(state=tk.DISABLED)
        scissors_button.config(state=tk.DISABLED)
        play_again_button.grid(row=3, column=1)

def reset_game():
    global player_score
    player_score.set("0")
    result_text.set("")
    rock_button.config(state=tk.NORMAL)
    paper_button.config(state=tk.NORMAL)
    scissors_button.config(state=tk.NORMAL)
    play_again_button.grid_remove()

def choose_color():
    color = colorchooser.askcolor()[1]
    if color:
        window.configure(bg=color)

notebook = ttk.Notebook(window)

game_tab = ttk.Frame(notebook)
notebook.add(game_tab, text=translations["game"])

rock_button = ttk.Button(game_tab, text=translations["rock"], command=lambda: play_game("kivi"))
rock_button.grid(row=0, column=0, padx=5, pady=5)

paper_button = ttk.Button(game_tab, text=translations["paper"], command=lambda: play_game("paber"))
paper_button.grid(row=0, column=1, padx=5, pady=5)

scissors_button = ttk.Button(game_tab, text=translations["scissors"], command=lambda: play_game("käärid"))
scissors_button.grid(row=0, column=2, padx=5, pady=5)

score_label = ttk.Label(game_tab, text=f"{translations['score']}: {player_score.get()}")
score_label.grid(row=1, column=0, columnspan=3)

result_text = tk.StringVar()
